apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'spoon'
android {
    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEYSTORE_PASSWORD
            storeFile file(KEY_FILE)
            storePassword KEYSTORE_PASSWORD
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "me.tipi.self_check_in"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        setProperty("archivesBaseName", "tipi-check-in-$versionName")
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //def date = new Date();
                    //def formattedDate = date.format('yyyyMMddHHmmss')
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace("-release", "")
                    )
                }
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'README.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.ext.supportLibraryVersion"
    compile 'com.google.android.gms:play-services-analytics:8.3.0'

    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.0@aar') {
        transitive = true
    }

    compile('com.doomonafireball.betterpickers:library:1.6.0') {
        exclude group: 'com.android.support', module: 'support-v4'
    }

    compile 'com.drivemode:TypefaceHelper:1.0.0@aar'


    androidTestCompile 'com.squareup.spoon:spoon-client:1.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.jakewharton.byteunits:byteunits:0.9.1'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'
    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.0'
    compile 'com.android.support:support-v4:23.1.1'
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}